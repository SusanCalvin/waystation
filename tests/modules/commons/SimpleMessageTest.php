<?php

use Commons\SimpleMessage as SimpleMessage;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-11-16 at 23:23:01.
 */
class SimpleMessageTest extends PHPUnit_Framework_TestCase
{

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        
    }

    /**
     * @covers Commons\SimpleMessage::__construct
     */
    public function test__construct()
    {
        // INFO
        $simpleMessage = new SimpleMessage(SimpleMessage::TYPE_INFO, 'Way Station');
        $this->assertTrue($simpleMessage->getType() === SimpleMessage::TYPE_INFO);
        $this->assertTrue($simpleMessage->getText() === 'Way Station');
        // ERROR
        $simpleMessage = new SimpleMessage(SimpleMessage::TYPE_ERROR, 'Way Station');
        $this->assertTrue($simpleMessage->getType() === SimpleMessage::TYPE_ERROR);
        $this->assertTrue($simpleMessage->getText() === 'Way Station');
        // DEBUG
        $simpleMessage = new SimpleMessage(SimpleMessage::TYPE_DEBUG, 'Way Station');
        $this->assertTrue($simpleMessage->getType() === SimpleMessage::TYPE_DEBUG);
        $this->assertTrue($simpleMessage->getText() === 'Way Station');
        // WARNING
        $simpleMessage = new SimpleMessage(SimpleMessage::TYPE_WARNING, 'Way Station');
        $this->assertTrue($simpleMessage->getType() === SimpleMessage::TYPE_WARNING);
        $this->assertTrue($simpleMessage->getText() === 'Way Station');
        // UNDEFINED
        $simpleMessage = new SimpleMessage(SimpleMessage::TYPE_UNDEFINED, 'Way Station');
        $this->assertTrue($simpleMessage->getType() === SimpleMessage::TYPE_UNDEFINED);
        $this->assertTrue($simpleMessage->getText() === 'Way Station');
    }
}
